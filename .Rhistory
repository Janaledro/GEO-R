###Script para alluviales
library(alluvial)
install.packages("alluvial")
install.packages("plyr")
install.packages("biobase")
install.packages("Biobase")
install.packages("GEOquery")
source("https://bioconductor.org/biocLite.R")
biocLite("GEOquery")
install.packages("XML")
install.packages("xml2")
install.packages("xml2")
install.packages("XML")
biocLite("GEOquery")
install.packages("RCurl")
install.packages("rCUR")
install.packages("curl")
install.packages("RCurl")
biocLite("GEOquery")
biocLite("GEOquery")
install.packages("ggplot2")
################################################################
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
vignette(GEOquery)
vignette("GEOquery")
#A continuación se cargará la librería 'ggplot' para hacer gráficos
library("ggplot2")
#A continuación se cargará la librería 'ggplot' para hacer gráficos
library("ggplot2")
#A continuación se leerán los datos
GEO<-read.csv(file="data/GEO_tablet.tsv", header = T, sep = "\t",
na.strings = "", stringsAsFactors = T)
setwd("GE")
setwd("~/GEO-R/")
#A continuación se leerán los datos
GEO<-read.csv(file="data/GEO_tablet.tsv", header = T, sep = "\t",
na.strings = "", stringsAsFactors = T)
#####################################################################
#Aquí se hará con 200 líneas para facilitar las pruebas
#Este bloque se tiene que comentar cuando se obtengan los datos completos
GEO<-droplevels(GEO[1:200,])
SPPs <- as.character(GEO.DF$ORGANISMO)
SPPs <- as.character(GEO$ORGANISMO)
SPPstr<-unlist(strsplit(SPPs, split = ","))
ESPECIES<-grep("!Sample_", SPPstr, value = T, invert = T)
ESPECIES.DF<- data.frame(ESPECIES, stringsAsFactors = T)
ESPECIES.DF<-droplevels(ESPECIES.DF)
my.summary<-summary.data.frame(ESPECIES.DF, maxsum = 7)
my.summary
#A continuación se leerán los datos
GEO<-read.csv(file="data/GEO_tablet.tsv", header = T, sep = "\t",
na.strings = "", stringsAsFactors = T)
SPPs <- as.character(GEO$ORGANISMO)
SPPstr<-unlist(strsplit(SPPs, split = ","))
ESPECIES<-grep("!Sample_", SPPstr, value = T, invert = T)
ESPECIES.DF<- data.frame(ESPECIES, stringsAsFactors = T)
ESPECIES.DF<-droplevels(ESPECIES.DF)
my.summary<-summary.data.frame(ESPECIES.DF, maxsum = 7)
my.summary
GEO.DF<-GEO[grepl(GEO$FECHA_DE_PUBLICACION, pattern = "Public_on_"),]
my.summary<-summary.data.frame(ESPECIES.DF, maxsum = 7)
ESPECIES<-grep("!Sample_", SPPstr, value = T, invert = T)
SPPs <- as.character(GEO.DF$ORGANISMO)
SPPstr<-unlist(strsplit(SPPs, split = ","))
ESPECIES<-grep("!Sample_", SPPstr, value = T, invert = T)
ESPECIES.DF<- data.frame(ESPECIES, stringsAsFactors = T)
ESPECIES.DF<-droplevels(ESPECIES.DF)
my.summary<-summary.data.frame(ESPECIES.DF, maxsum = 7)
ESPECIES.DF<-data.frame(ORGANISMO=, NUMERO_DE_ENTRADAS_EN_LA_TABLA=my.summary)
ESPECIES.DF<-data.frame(
ORGANISMO=c("Homo_sapiens", "Mus_musculus", "Arabidopsis_thaliana",
"Drosophila_melanogaster", "Rattus_novergicus", "Saccharomyces_cerevisiae",
"Other"),
NUMERO_DE_ENTRADAS_EN_LA_TABLA=c(21905, 14898, 1876, 1792, 1506, 1289, 12609),
stringsAsFactors = T)
my.summary
bp<- ggplot(ESPECIES.DF, aes(x="", y=NUMERO_DE_ENTRADAS_EN_LA_TABLA, fill= ORGANISMO))+
geom_bar(width = 1, stat = "identity")
bp + scale_fill_brewer(palette="Dark2")
pie <- bp + coord_polar("y", start=0)
pie + scale_fill_brewer(palette="Dark2")
